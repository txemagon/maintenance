#!/bin/bash
# do_in

# Oct, 2015, txema.gonz@gmail.com
# GNU GENERAL PUBLIC LICENSE, Version 2

# Executes a maneuver on a single machine

# Usage:   do_in [<user>]@<host> <maneuver> [param]*
# Example: do_in txema@192.168.1.2 execute_as jorge firefox
#
# Which will ssh -X in 192.168.1.2 as txema and will assign txema's display
# authorization to user jorge, and finally will open jorge's firefox.
#
# Check installation typing:
#          do_in localhost greet


VERSION=1.0

. /usr/share/nettenance/general.sh

display_usage () {
    cat <<EOF

    $NTT_CMD_NAME v$VERSION  -  Executes a bash file in a single remote machine.

USAGE:
    $NTT_CMD_NAME [<options>] [<user>@]<host> <maneuver_file> [<maneuver file parameters>]

    Maneuvers files can be located in system wide config (for all users) inside
    $NTT_SYS_MNVR or in a per user configuration inside
    $NTT_LOC_MNVR

OPTIONS:
    -h, --help
          Shows usage.

    -V, --version
          Displays program version.

EXAMPLE: do_in localhost greet

EOF
}


# read the options
TEMP=`getopt -o hV --long help,version -n \'$NTT_CMD_NAME\' -- "$@"`
eval set -- "$TEMP"

# extract options and their arguments into variables.
while true ; do
    case "$1" in
        -h|--help) display_usage; exit 0 ;;
        -V|--version) display_version; exit 0;;
        --) shift ; break ;;
        *) echo "Internal error!" >&2; exit 1 ;;
    esac
done

if [[ $# -lt 2 ]];
then
    echo "Too few arguments."
    echo
    display_usage >&2
    exit 1
fi

sshing=$1         ## Host to ssh
shift
maneuver=$1
shift

if [[ -f "$NTT_LOC_MNVR/$maneuver" ]];
then
    maneuver=$NTT_LOC_MNVR/$maneuver
elif [[ -f $NTT_SYS_MNVR/$maneuver ]];
then
    maneuver=$NTT_SYS_MNVR/$maneuver
else
    cat <<EOF >&2


    Maneuver not found.

$maneuver not found neither in any of the following:

    - $NTT_LOC_MNVR
    - $NTT_SYS_MNVR

EOF
    display_usage >&2
    exit 2
fi

maneuver="$(<$maneuver)" ## Load maneuver file as whole.

# The rest of parameters are to be passed to maneuver file
declare -i counter=0
while [[ $@ > 0 ]];
do
    ((counter++))
    # Substitute $1, $2,... in the maneuver file with current parameter ($1)
    maneuver=${maneuver//\$$counter/$1}
    echo $maneuver
    shift
done

ssh -Xt $sshing $maneuver
