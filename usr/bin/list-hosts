#!/bin/bash
# list-hosts

# Oct, 2015, txema.gonz@gmail.com
# GNU GENERAL PUBLIC LICENSE, Version 2

# List the active hosts (reported by host-scan service)
# whithin the specified or userhost.lst or in the default
# one. When there is no scan (in /var/nettenance) then
# list-hosts displays contents of the provided file.

# Usage:   list-hosts [options]
# Example: list-hosts -H ~/.nettenance/userhost.lst

# Note: When userhost.lst is a symbolic link, the
# symlink is previously resolved.

VERSION=1.0

. /usr/share/nettenance/general.sh


display_usage () {
    cat <<EOF

    $NTT_CMD_NAME v$VERSION  -  Lists only active/known hosts when there is a scanning
                 service running. It list the file contents otherwise.

USAGE:
    $NTT_CMD_NAME [<options>]

OPTIONS:
    -H, --hosts:
          -H {<user_host_file>=userhost.lst}
          User host file is a list of host names or ip's specifying target machines.
          When any file is specified, 'userhost.lst' is assumed to exist either in:

               - $NTT_LOC_MNVR
               - $NTT_SYS_MNVR

          respectively. It is a good idea to keep separate lists of IPs under ~/.nettenance/hosts
          and link ~/.nettenance/userhost.lst to point to the desired environment.

          Each line of the host file is assumed to have just one IP or
          IP and MAC address (<TAB> separated).

          When the file is not present in the above dirs then, the command
          assumes that you are specifying the path to the file. In such manner,
          it would be the same to write:

            $NTT_CMD_NAME userhost.lst
          that
            $NTT_CMD_NAME ~/.nettenance/userhost.lst

    -k, --known
          Show all known hosts (gathered by the scanner over the time) instead
          of active ones. Forces the program to look into
          host-scan daemon results rather than in the provided file.

    -a, --all
          Show IPs and MAC when present. Forces the program to look into
          host-scan daemon results rather than in the provided file.

    -m, --mac
          Just show MACs. Forces the program to look into
          host-scan daemon results rather than in the provided file.

    -h, --help
          Shows usage.

    -V, --version
          Displays program version.

EXAMPLE: $NTT_CMD_NAME -m
         Shows all the active MACs. As long as no userhost is provided, then
         ~/.nettenance/userhost.lst is used. If userhost.lst is a symlink, it
         is resolved and used unless there is a mirror file (at /var/nettenance)
         automatically generated by host-scan daemon reporting only active hosts.

NOTE:
         When only IP's are shown the list of active hosts isn't used unless
         is newer than host-scan RELOAD_TIME (/etc/nettenance/host-scan.conf)
EOF
}

hostfile=userhost.lst


# read the options
TEMP=`getopt -o hVH:amk --long help,version,hosts:,all,mac,known -n $NTT_CMD_NAME -- "$@"`

eval set -- "$TEMP"

# extract options and their arguments into variables.

# 0: show all
# 1: show ip
# 2: show mac
cutting=1

dyn_dir=scan

while true ; do
    case "$1" in
        -h|--help) display_usage; exit 0 ;;
        -V|--version) display_version; exit 0;;
        -a|--all) cutting=0; shift;;
        -m|--mac) cutting=2; shift;;
        -k|--known) dyn_dir=known; known=1; shift;;
        -H|--hosts) case "$2" in
            "") shift 2 ;;
            *) hostfile=$2 ; shift 2 ;;
        esac ;;
        --) shift ; break ;;
        *) echo "Unknown option. Internal error!" >&2; exit 1 ;;
    esac
done

hostfile=$(look_for $hostfile HOST)
check_existence_of $hostfile

original=$(readlink -m $hostfile)
original_path="$(dirname "$original")"
original_file="$(basename "$original")"

# $1: scan or known
dynamic_file() {
  local f user final_file

    for whole_fn in /var/nettenance/$1/*.macs; do
	    f="${whole_fn##*/}"
	    f="${f%.macs}"
	    user="${f%%.*}"
	    f="${f#$user.}"
	    if [[ "$f" = "$original_file" ]]; then
          if [[ "$user" = "global" ]]; then
      	    final_file="$whole_fn"
          elif test $(echo "$original_path" | grep "$user"); then
      	    final_file="$whole_fn"
          fi
        fi
    done

    echo "$final_file"
}

# Test RELOAD_TIME
include_sanitized /etc/nettenance/host-scan.conf

final_file="$( dynamic_file $dyn_dir )"

hostfile="$(< "$hostfile")"
if [ -z $known ]; then
    aged=0
    if [[ -d "/var/nettenance/scan" ]] && [[ -x "/var/nettenance/scan" ]] && [[ -f "$final_file" ]]; then
      aged=$(( $(date +%s) - $(date +%s -r "$final_file") ))
    fi

    if [ -f "$final_file" ]; then
        if [ $cutting -ne 1 ] || [ $RELOAD_TIME -gt $aged ]; then
           hostfile=$(<"$final_file")
        fi
    fi
else
  hostfile=$( shatter -rd "$final_file" )
fi

if [ $cutting -eq 0 ]; then
   cat <<< "$hostfile" | sed -e /^$/d
else
	cat <<< "$hostfile" | cut -f$cutting | sed -e /^$/d
fi
