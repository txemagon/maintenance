#!/bin/bash
# make-booklet

# Oct, 2015, txema.gonz@gmail.com
# GNU GENERAL PUBLIC LICENSE, Version 2

# Makes a booklet

# Usage:   make-booklet <pdf_file>
# Example: make-booklet text.pdf
#
# Outputs text_booklet.pdf

VERSION=1.0

. /usr/share/nettenance/general.sh

display_usage () {
	cat <<EOF

    $0 <pdf_file>

    Converts a pdf into a landscaped booklet for printing.
    Fold every four pages (signature 16) unless you specify
    another folding option.

    -f, --fold=4
          Specify how many pages you want to fold to compose
          the booklet.
    -s, --scal=0.66
          Since we have to put two pages per page this seems
          to be a good default option. If pages overlap change
          scale.

    -h, --help
          Shows usage.

    -V, --version
          Displays program version.

EXAMPLE: $NTT_CMD_NAME /usr/share/doc/text.pdf
         Converts text.pdf to text_booklet.pdf

EOF
}

fold=4
scale="0.66"

# read the options
TEMP=`getopt -o hVf:s: --long help,version,fold:,scale: -n $NTT_CMD_NAME -- "$@"`

eval set -- "$TEMP"

# extract options and their arguments into variables.

while true ; do
    case "$1" in
        -h|--help) display_usage; exit 0 ;;
        -V|--version) display_version; exit 0;;
        -f|--fold) fold=$2; shift 2;;
        -s|--scale) scale=$2; shift 2;;
        --) shift ; break ;;
        *) echo "Internal error!" >&2; exit 1 ;;
    esac
done

ensure_args 1 $#

dir_name=$(dirname $1)
file_name=$(basename $1)
name="${file_name%.*}"
ext="${file_name##*.}"

if [[ ! "$ext" = "pdf" ]]; then
	display_usage
	echo
	echo "File name shall end up in .pdf" >&2
	echo
	exit 1
fi

pdf2ps "$1" - | psbook -s$(( $fold * 4 )) | psnup -2 -s"$scale" | ps2pdf - "${name}_booklet.pdf"
