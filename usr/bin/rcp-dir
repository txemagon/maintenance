#!/bin/bash
# rcp-dir
# Oct, 2015. txema.gonz@gmail.com

VERSION=1.0

. /usr/share/nettenance/general.sh

command="gnome-terminal"
init_task=" --tab -e "
S="\""
s="'"
b="bash -c "

local_command="pushd LOCAL_DIR; cd ..;pwd=\`pwd\`; tar -c OPTION0 | pv --size \`du -s $pwd | cut -f1\` | pigz -5 | nc -l 8888; echo 'Back to: '; popd"
remote_command="mkdir -p REMOTE_DIR; cd REMOTE_DIR; nc REMOTE_IP 8888 | pigz -d | tar xvf -"

declare -A remote_dir

display_usage() {
    echo "Copies a whole dir into another host"
    echo -e "\nUsage:\n $0 <local dir> [user]@<host>:<remote dir>"
    echo "current user is used when not providing any."
    echo -e "\nExample:\n $0 mapa/ @172.17.1.200:/var/www"
}

# Fill in remote_dir fields
parse_dir() {

    local dir=$1

    local result=$(get_me "@" $dir)
    remote_dir[user]=${result:-$USER}
    dir=$(strip_till "@" $dir)

    local result=$(get_me ":" $dir)
    if [ -z $result ]
    then
        echo "Host not provided."
        display_usage
        exit 1
    fi
    remote_dir[host]=$result
    dir=$(strip_till ":" $dir)

    dir=${dir%/} # Get rid of last slash

    remote_dir[dir]=$dir
}


# Show remote_dir values.
show_dir() {
    echo "User: ${remote_dir[user]}"
    echo "Host: ${remote_dir[host]}"
    echo "Dir : ${remote_dir[dir]} "
}

my_ip () {
    ip -o route get ${remote_dir[host]} | \
    sed -n 's/.* src//p' - | \
    sed -n  's/\([0-9]\{1,3\}\.\)\{3\}[0-9]\{1,3\}/\nip&\n/gp' - | \
    grep ip | sed 's/ip//'| sort | uniq
}

# Check number of params
if [ $# -le 1 ]
then
    display_usage
    exit 1
fi

# Look for help option
last_param="${@:-1}"

if [[ ( $last_param == "--help") || ($last_param == "-h") ]]
then
    display_usage
    exit 0
fi

# main
# local
local_dir=${1%/}
last_dir=${local_dir##*/}
base_dir=${local_dir:0:`expr ${#local_dir}-${#last_dir}-1`}

local_command=${local_command[0]//OPTION0/$last_dir}
local_command=${local_command//LOCAL_DIR/$local_dir}
command=$command$init_task$S$b$s$local_command
#command+="; exec bash"
command+=$s$S

# remote
parse_dir $2 # Parse remote schema
my_ip=$(my_IP)
remote_command=${remote_command//REMOTE_DIR/${remote_dir[dir]}}
remote_command=${remote_command//REMOTE_IP/$my_ip}

command+=$init_task$S
command+="ssh -t ${remote_dir[user]}@${remote_dir[host]} "
command+=$s$remote_command
command+="; exec bash"$s$S

# Run everything
echo "Copying ${local_dir}: `du -sh $local_dir | cut -f1`"
eval $command
