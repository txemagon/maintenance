#!/bin/bash
# copy-credentials

# Oct, 2015, txema.gonz@gmail.com
# GNU GENERAL PUBLIC LICENSE, Version 2

# Copies $credentials[=~/.ssh/id_rsa.pub] to
# the hosts provided through userhost.lst
# First param can provider remote user name user[=root]

# Usage:   copy-credentials [<user>=root]
# Example: copy-credentials bob

# Note: Point with userhost.lst (symbolic link) to a file
# containing the hosts

## Config Default Values
VERSION=1.0

. /usr/share/nettenance/general.sh

# default_value
user="root"
login=$user
identity="~/.ssh/id_rsa.pub"


display_usage () {
    cat <<EOF

    $NTT_CMD_NAME v$VERSION  -  Copy your ssh credential to multiple remotes machine.

USAGE:
    $NTT_CMD_NAME [<options>]

OPTIONS:
    -H, --hosts:
          -H {<user_host_file>=userhost.lst}
          User host file is a list of host names or ip's specifying target machines.
          When any file is specified, 'userhost.lst' is assumed to exist either in:

               - $NTT_LOC_MNVR
               - $NTT_SYS_MNVR

          respectively. It is a good idea to keep separate lists of IPs under ~/.nettenance/hosts
          and link ~/.nettenance/userhost.lst to point to the desired environment.

    -u, --user
          -u {<user>=root}
          Remote user where identity is to be copied.

    -l, --login
          -l {<login>=root}
          The user used for ssh.

    -i, --identity
          -i {<identity_file>=~/.ssh/id_rsa.pub}
          Identity file to be copied on remote machine.

    -h, --help
          Shows usage.

    -V, --version
          Displays program version.

EXAMPLE: $NTT_CMD_NAME
         Copy credentials of ~/.ssh/id_rsa.pub to all hosts listed in userhost.lst under
         $NTT_LOC_CONF/userhost.lst or userhost.lst under $NTT_SYS_CONF/userhost.lst when
         former not found.

EOF
}

hostfile=userhost.lst


# read the options
TEMP=`getopt -o hVH:u:i:l: --long help,version,hosts:,user:,identity:,login: -n $NTT_CMD_NAME -- "$@"`

eval set -- "$TEMP"

# extract options and their arguments into variables.

while true ; do
    case "$1" in
        -h|--help) display_usage; exit 0 ;;
        -V|--version) display_version; exit 0;;
        -H|--hosts) case "$2" in
            "") shift 2 ;;
            *) hostfile=$2 ; shift 2 ;;
        esac ;;
        -u|--user) case "$2" in
            "") shift 2 ;;
            *) user=$2 ; shift 2 ;;
        esac ;;
        -l|--logim) case "$2" in
            "") shift 2 ;;
            *) login=$2 ; shift 2 ;;
        esac ;;
        -i|--identity) case "$2" in
            "") shift 2 ;;
            *) identity=$2 ; shift 2 ;;
        esac ;;
        --) shift ; break ;;
        *) echo "Internal error!" >&2; exit 1 ;;
    esac
done

hostfile=$(look_for $hostfile HOST)
check_existence_of $hostfile


for ip in $(list-hosts -H $hostfile); do
    cat $identity | ssh $login@$ip "cd ~$user ; mkdir .ssh &> /dev/null; cat >> .ssh/authorized_key"
done

