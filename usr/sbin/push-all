#!/bin/bash
# push-all

# Oct, 2015, txema.gonz@gmail.com
# GNU GENERAL PUBLIC LICENSE, Version 2

# Pushes all the files inside <repository> in all the userhost.lst

# Usage: push-all <repository>
# Example: push-all inf1-ubuntu-14.04



# Note: Point with userhost.lst (symbolic link) to a file
# containing the hosts.

VERSION=1.0

. /usr/share/nettenance/general.sh

display_usage () {
    cat <<EOF

    $NTT_CMD_NAME v$VERSION  -  Push all the files in a repository dir inside the
                                host machines.

USAGE:
    $NTT_CMD_NAME [<options>] <repository_dir>

    Repositories can be located in system wide config (for all users) inside
    $NTT_SYS_REPO or in a per user configuration inside
    $NTT_LOC_REPO

SUBTLETIES:
    Only syste wide files are pushed by default. Whenever you want to store
    per user configuration save it under a directory called: ~ 
    Exactly. Tilde. One single character. As long as ~ is a metacharacter
    remember to escape it when working from comand line ( mkdir \~ ).

OPTIONS:
    -H, --hosts:
          -H {<user_host_file>=userhost.lst}
          User host file is a list of host names or ip's specifying target machines.
          When any file is specified, 'userhost.lst' is assumed to exist either in:

               - $NTT_LOC_MNVR
               - $NTT_SYS_MNVR

          respectively. It is a good idea to keep separate lists of IPs under ~/.nettenance/hosts
          and link ~/.nettenance/userhost.lst to point to the desired environment.

    -a, --all:
          Push system wide and per user files.

    -u, --users:
          Just push user files (under ~ dir).

    -h, --help
          Shows usage.

    -V, --version
          Displays program version.

EXAMPLE: $NTT_CMD_NAME localhost greet

EOF
}

hostfile=userhost.lst


# read the options
TEMP=`getopt -o hVH:au --long help,version,hosts:,all,users -n $NTT_CMD_NAME -- "$@"`

eval set -- "$TEMP"

# extract options and their arguments into variables.
SCOPE=0
while true ; do
    case "$1" in
        -h|--help) display_usage; exit 0 ;;
        -V|--version) display_version; exit 0;;
        -u|--users) SCOPE=$(( $SCOPE + 1)); shift ;;
        -a|--all) SCOPE=2; shift ;;
        -H|--hosts) case "$2" in
            "") shift 2 ;;
            *) hostfile=$2 ; shift 2 ;;
        esac ;;
        --) shift ; break ;;
        *) echo "Internal error!" >&2; exit 1 ;;
    esac
done

hostfile=$(look_for $hostfile HOST)
check_existence_of $hostfile

ensure_args 1 $#
repository=$(find_dir $1 REPO)
check_dir "$repository"

echo "You are about to make changes in remote config files. "
read -p "Are you sure? (y/n) " -n 1 -r
echo    # (optional) move to a new line
if [[ ! $REPLY =~ ^[Yy]$ ]]
then
    echo "Nothing changed. Goodbye!"
    exit 0
fi

echo "Starting..."
for ip in $(list-hosts -H $hostfile); do

   toilet -f term -F border --gay  "$ip"

   if [ $SCOPE -ne 1 ]; then
        echo "SYSTEM WIDE Copy"
        rsync --exclude \~ -avz  $repository/ root@$ip:/
   fi

   if [ $SCOPE -ne 0 ]; then
      for dir in $(ssh root@$ip "getent passwd | grep /home | cut -d: -f6"); do
          if ssh root@$ip "ls $dir" &> /dev/null; then 
            echo "PER USER Copy"
             echo "Copying $ip => $dir. "
             rsync --dry-run -avz $repository/\~ root@$ip:"$dir"
          fi
       done
   fi
done
